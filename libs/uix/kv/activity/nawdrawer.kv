# -*- coding: utf-8 -*-

#:kivy 1.9.1
#:import os os
#:import MDSeparator kivymd.card.MDSeparator

<ImageButton@ButtonBehavior+Image>:

<LabelSection@Label>:
    markup: True
    bold: True
    font_size: '16sp'
    color: app.text_color_from_hex
    size_hint_y: None
    height: dp(45)

<NavDrawer>:
    _app: app

    BoxLayout:
        orientation: 'vertical'
        padding: dp(10), dp(10)
        spacing: dp(10)
        size_hint_y: None
        height: dp(app.window.height - scroll.height)

        canvas:
            Color:
                rgba: app.theme_cls.primary_color
            Rectangle:
                pos: self.pos
                size: self.size

        BoxLayout:

            ImageButton:
                id: avatar
                size_hint: None, None
                size: dp(100), dp(100)
                pos_hint: {'top': 1}
                source:
                    'data/images/avatar.png' \
                    if os.path.exists(\
                    '%s/data/images/avatar.png' % app.directory) \
                    else 'data/images/avatar_empty.png'
                on_release: app.choice_avatar_user()

            Widget:

        Label:
            id: user_name
            size_hint: None, None
            height: dp(20)
            width: self.texture_size[0]
            halign: 'left'
            markup: True

    ScrollView:
        id: scroll
        size_hint_y: None
        height: dp(app.window.height - 170)

        GridLayout:
            cols: 1
            size_hint_y: None
            height: self.minimum_height

            IconItemOne:
                icon: 'data/images/issues.png'
                text: app.translation._('Вопросы')
                events_callback:
                    lambda: root.show_posts()
            IconItemOne:
                icon: 'data/images/answer.png'
                text: app.translation._('Ответы')

            MDSeparator:

            LabelSection:
                text: 'Группа:'

            IconItemOne:
                icon: 'data/images/issues.png'
                id: issues_in_group
                text: app.translation._('Вопросов в группе - %s') % '0'
                events_callback:
                    lambda: root.show_posts(only_questions=False)
            IconItemOne:
                icon: 'data/images/new_issues.png'
                id: new_issues_in_group
                text: app.translation._('Новые - %s') % '0'
                events_callback:
                    lambda: root.show_posts(\
                    count_issues=self.text.split('-')[1], \
                    only_questions=False)

            MDSeparator:

            LabelSection:
                text:  app.translation._('Настройки' + ':')
                events_callback: lambda x: x
            IconItemOne:
                icon: 'data/images/settings.png'
                text: app.translation._('Настройки')
            IconItemOne:
                icon: 'data/images/plugins.png'
                text: app.translation._('Плагины')
                events_callback: app.show_plugins
            IconItemOne:
                icon: 'data/images/locale.png'
                text: app.translation._('Язык')
                events_callback: app.select_locale
            IconItemOne:
                icon: 'data/images/license.png'
                text: app.translation._('Лицензия')
                events_callback: app.show_license
            IconItemOne:
                icon: 'data/images/about.png'
                text: 'About'
                events_callback: app.show_about
            IconItemOne:
                icon: 'data/images/exit.png'
                text: app.translation._('Выход')
                events_callback: app.dialog_exit