#: kivy 1.9.1
#: import os os
#: import MDIconButton kivymd.button.MDIconButton
#: import MDFlatButton kivymd.button.MDFlatButton
#: import MDSeparator kivymd.card.MDSeparator

<ImageButton@ButtonBehavior+Image>:

#<DrawerItem>:
#    size_hint_y: None
#    height: dp(40)
#
#    MDIconButton:
#        icon: root.icon
#        theme_text_color: 'Custom'
#        text_color: app.theme_cls.primary_color
#        on_release: root.callback()
#
#    MDFlatButton:
#        id: label_item
#        text: root.text
#        markup: True
#        valign: 'middle'
#        color: app.data.text_color_from_hex
#        size_hint_y: None
#        font_size: '14sp'
#        text_size: self.size[0] - 10, self.size[1]
#        height: dp(45)

<LabelSection@Label>:
    markup: True
    bold: True
    font_size: '16sp'
    color: app.data.text_color_from_hex
    size_hint_y: None
    height: dp(45)

<NavDrawer>:
    ImageButton:
        id: avatar
        source:
            'data/images/avatar.png' \
            if os.path.exists('{}/data/images/avatar.png'.format(\
            app.directory)) else 'data/images/avatar_empty.png'
        size_hint: None, None
        size: dp(150), dp(150)
        pos_hint: {'center_x': .5}
        on_release: app.choice_avatar_user()

    Widget:

    LabelSection:
        id: user_name
        text: app.data.user_name

    ScrollView:
        size_hint_y: None
        height: app.window.size[1] // 1.8

        GridLayout:
            cols: 1
            size_hint_y: None
            height: self.minimum_height

            IconItemOne:
                icon: 'data/images/issues.png'
                text: app.data.string_lang_issues
                #events_callback: app.show_dialog_registration
            IconItemOne:
                icon: 'data/images/answer.png'
                text: app.data.string_lang_answer

            MDSeparator:

            LabelSection:
                text: 'Группа:'

            IconItemOne:
                icon: 'data/images/issues.png'
                id: issues_in_group
                text: app.data.string_lang_issues_in_group.format('0')
            IconItemOne:
                icon: 'data/images/new_issues.png'
                id: new_issues_in_group
                text: app.data.string_lang_new_issues_in_group.format('0')

            MDSeparator:

            LabelSection:
                text:  app.data.string_lang_settings + ':'

            IconItemOne:
                icon: 'data/images/settings.png'
                text: app.data.string_lang_settings
            IconItemOne:
                icon: 'data/images/plugins.png'
                text: app.data.string_lang_plugin
                events_callback: app.show_plugins
            IconItemOne:
                icon: 'data/images/license.png'
                text: app.data.string_lang_license
                events_callback: app.show_license
            IconItemOne:
                icon: 'data/images/about.png'
                text: 'About'
                events_callback: app.show_about
            IconItemOne:
                icon: 'data/images/exit.png'
                text: app.data.string_lang_exit_key
                events_callback: app.dialog_exit
